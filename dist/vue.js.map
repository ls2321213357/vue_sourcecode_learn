{"version":3,"file":"vue.js","sources":["../src/compiler/parseHtml.js","../src/compiler/index.js","../src/observe/rewriteArray.js","../src/observe/index.js","../src/initState.js","../src/init.js","../src/index.js"],"sourcesContent":["const ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`;\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`;\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); //他匹配的分组是一个开始标签的名字\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`); //他匹配的分组是结束标签的名字\r\nconst attribute =\r\n  /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/; //匹配属性\r\nconst startTagClose = /^\\s*(\\/?)>/;\r\n\r\n/**\r\n *\r\n * @param {string} html\r\n */\r\nexport function parseHtml(html) {\r\n  function advance(num) {\r\n    //进行截取\r\n    html = html.substring(num);\r\n  }\r\n  /////在这里需要把返回的标签整理成一个树形结构  可以利用栈的结构来实现\r\n  const START_TYPE = 1; //开始标签类型\r\n  const TEXT_TYPE = 3; //文本类型\r\n  let root = null; //根节点\r\n  const stack = []; //栈\r\n  let startStack; //永远指向栈中的最后一个元素\r\n  //生成树形结构\r\n  function createASTElement(tag, attrs) {\r\n    return {\r\n      tag,\r\n      attrs,\r\n      type: START_TYPE,\r\n      children: [],\r\n      parent: null,\r\n    };\r\n  }\r\n  //开始标签处理函数\r\n  function startHandler(tag, attrs) {\r\n    const node = createASTElement(tag, attrs); //创造一个AST节点\r\n    if (!root) root = node;\r\n    stack.push(node); //把节点推到栈里\r\n    //如果存在了元素  就让当前的元素父节点指向栈顶元素 并把当前元素加入到栈顶元素的子节点集合中\r\n    if (startStack) {\r\n      node.parent = startStack;\r\n      startStack.children.push(node);\r\n    }\r\n    startStack = node; //更新指向的位置\r\n  }\r\n  //文本处理函数\r\n  function textHandler(text) {\r\n    text = text.replace(/\\s/g, \"\"); //如果是空就替换\r\n    //直接加到子节点上\r\n    text &&\r\n      startStack.children.push({\r\n        text,\r\n        type: TEXT_TYPE,\r\n        parent: startStack,\r\n      });\r\n  }\r\n  //结束标签处理\r\n  function endHandler() {\r\n    stack.pop(); //遇到结束标签就进行弹出操作\r\n    startStack = stack[stack.length - 1];\r\n  }\r\n  // 进行模板解析\r\n  function parseStartTag() {\r\n    const start = html.match(startTagOpen);\r\n    if (start) {\r\n      const matchObj = {\r\n        tagName: start[1], //标签名\r\n        attrs: [],\r\n      };\r\n      //解析标签完成以后 就把这个包含的表单字符串从原来的整体模板字符串中删掉\r\n      advance(start[0].length);\r\n      //如果匹配的不是开始标签的那个结束标签的位置 就一直匹配下去\r\n      let attrs, end;\r\n      while (\r\n        !(end = html.match(startTagClose)) &&\r\n        (attrs = html.match(attribute))\r\n      ) {\r\n        //匹配的是标签上的属性\r\n        attrs && advance(attrs[0].length);\r\n        matchObj.attrs.push({\r\n          name: attrs[1],\r\n          //属性可能是第 3 4 5项\r\n          value: attrs[3] || attrs[4] || attrs[5] || true,\r\n        });\r\n      }\r\n      end && advance(end[0].length);\r\n      return matchObj;\r\n    }\r\n  }\r\n  while (html) {\r\n    //如果textEnd=0 则说明是一个开始标签或者结束标签 如果>0则说明是文本的结束位置\r\n    let textEnd = html.indexOf(\"<\");\r\n    if (textEnd === 0) {\r\n      const startTagText = parseStartTag(); //开始标签的解析结果\r\n      if (startTagText) {\r\n        startHandler(startTagText.tagName, startTagText.attrs);\r\n        continue; //如果存在开始的标签了  那就跳出当前继续往下走\r\n      }\r\n      let endTagText = html.match(endTag); //遇到结束标签就处理\r\n      if (endTagText) {\r\n        endHandler(endTagText[1]);\r\n        //直接把结束标签删除\r\n        advance(endTagText[0].length);\r\n        continue;\r\n      }\r\n    } else if (textEnd > 0) {\r\n      let textHtml = html.substring(0, textEnd); //html解析的文本部分\r\n      if (textHtml) {\r\n        textHandler(textHtml);\r\n        advance(textHtml.length); //匹配到然后删除\r\n      }\r\n    }\r\n  }\r\n  return root;\r\n}\r\n","import { parseHtml } from \"./parseHtml\";\r\n//解析标签上的属性\r\nfunction genProps(attrs) {\r\n  let str = \"\";\r\n  for (let attr of attrs) {\r\n    if (attr.name === \"style\") {\r\n      const attrObj = {};\r\n      //当为style属性的时候 需要进行分别包装\r\n      attr.value.split(\";\").forEach((item) => {\r\n        const [key, value] = item.split(\":\");\r\n        attrObj[key] = value;\r\n      });\r\n      attr.value = attrObj;\r\n    }\r\n    str += `${attr.name}:${JSON.stringify(attr.value)},`;\r\n  }\r\n  return `{${str.slice(0, -1)}}`;\r\n}\r\n//匹配文本{{}} 因为有g 所以需要将lastIndex = 0 回到原位一下\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g;\r\n//解析子节点\r\nfunction gen(childNode) {\r\n  if (childNode.type === 1) {\r\n    //如果是html标签 就递归执行codeGen\r\n    return codeGen(childNode);\r\n  } else {\r\n    //是文本内容  如果匹配成功  是包括{{}} 的\r\n    let textSelf = childNode.text;\r\n    if (defaultTagRE.test(textSelf)) {\r\n      //包括{{}}\r\n      let lastIndex = 0; //文本的最后一个下标\r\n      let matchStr;\r\n      let tokens = [];\r\n      defaultTagRE.lastIndex = 0; //正则表达式的检测下标\r\n      while ((matchStr = defaultTagRE.exec(textSelf))) {\r\n        let currentIndex = matchStr.index; //记录当前匹配元素的index\r\n        //如果 当前的索引大于上一次记录的索引 说明中间有非{{}}的文本\r\n        if (currentIndex > lastIndex)\r\n          tokens.push(JSON.stringify(textSelf.slice(lastIndex, currentIndex)));\r\n        tokens.push(`_s(${matchStr[1].trim()})`); //是花括号的内容就进行_s包装下\r\n        lastIndex = currentIndex + matchStr[0].length;\r\n      }\r\n      //这部分是匹配花括号之后部分的普通文本\r\n      if (lastIndex < textSelf.length)\r\n        tokens.push(JSON.stringify(textSelf.slice(lastIndex)));\r\n      return `_v(${tokens.join(\"+\")})`;\r\n    } else {\r\n      //单纯的文本 没有{{}}\r\n      return `_v(${JSON.stringify(textSelf)})`;\r\n    }\r\n  }\r\n}\r\n//将ast拼接成一个字符串\r\nfunction codeGen(ast) {\r\n  const children = ast.children.map((child) => gen(child)).join(\",\");\r\n  return `_c('${ast.tag}',\r\n  ${ast.attrs.length ? genProps(ast.attrs) : \"null\"}\r\n  ${ast.children.length ? `,${children}` : \"\"}\r\n  )`;\r\n}\r\n\r\nexport function compileToFunction(template) {\r\n  /* \r\n    1.将template 转换成AST语法树\r\n    2.生成render方法 (render方法返回的结果是 虚拟DOM)\r\n    */\r\n  let ast = parseHtml(template);\r\n  let codeResult = codeGen(ast);\r\n  codeResult = `with(this){return ${codeResult}}`;\r\n  const render = new Function(codeResult);\r\n  return render;\r\n}\r\n","//     多数组方法进行重写\r\n\r\nimport { isObject } from \"./index\";\r\n\r\n//拷贝一份新的数组原型出来 以免去破坏数组原型的原本方法\r\nconst arrProto = Array.prototype;\r\nexport const newArrayProto = Object.create(arrProto);\r\n//列举能修改原数组的方法\r\nconst arrMethods = [\r\n  \"push\",\r\n  \"pop\",\r\n  \"reverse\",\r\n  \"splice\",\r\n  \"shift\",\r\n  \"unshift\",\r\n  \"sort\",\r\n];\r\nfor (let i = 0; i < arrMethods.length; i++) {\r\n  newArrayProto[arrMethods[i]] = function (...args) {\r\n    //这里重写了数组的方法\r\n    const resultFun = arrProto[arrMethods[i]].apply(this, args); //内部依然调用数组的原来的方法\r\n    //如果args参数是引用类型的话 那么依然要进行劫持\r\n    let insertItem;\r\n    let ob = this.__ob__;\r\n    switch (arrMethods[i]) {\r\n      case \"push\":\r\n      case \"unshift\":\r\n        insertItem = args;\r\n        break;\r\n      case \"splice\":\r\n        //如果是添加元素并且添加的是对象时\r\n        if (args[1] === 0) insertItem = args.slice(2);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    if (insertItem.length > 0) {\r\n      for (let n = 0; n < insertItem.length; n++) {\r\n        if (isObject(insertItem[n])) ob.walk(insertItem[n]);\r\n      }\r\n    }\r\n    return resultFun;\r\n  };\r\n}\r\n","import { newArrayProto } from \"./rewriteArray\";\r\n\r\n/**\r\n *\r\n * @param {object} data\r\n */\r\nexport function observe(data) {\r\n  //只对对象进行劫持\r\n  if (typeof data !== \"object\" || data === null) return;\r\n  //说明已经被代理过 所以就不用继续进行代理了\r\n  if (data.__ob__ instanceof Observer) return data.__ob__;\r\n  /* \r\n  如果一个对象被劫持过 就不需要再次被劫持了 所以需要一个实例来进行判断一下\r\n  \r\n  */\r\n  return new Observer(data);\r\n}\r\n//给对象每个属性进行响应式处理\r\nexport function defineReactive(target, key, value) {\r\n  if (isObject(value)) observe(value); //如果是嵌套的对象 直接进行递归\r\n  //闭包\r\n  Object.defineProperty(target, key, {\r\n    get() {\r\n      console.log(`获取了${key}`);\r\n      return value;\r\n    },\r\n    set(newVal) {\r\n      console.log(`设置了${key}`);\r\n      if (value !== newVal) value = newVal;\r\n    },\r\n  });\r\n}\r\nexport function isObject(obj) {\r\n  return obj !== null && typeof obj === \"object\";\r\n}\r\nclass Observer {\r\n  /* \r\n    利用object.defineproperty来进行劫持，但是只能劫持对象已有属性 删除或者新增属性是无法监听到的 \r\n    所以写了一些api 如 $set $delete\r\n    */\r\n  constructor(data) {\r\n    //给数加了一个标识 如果数据上有__ob__ 则说明这个属性被观测过\r\n    Object.defineProperty(data, \"__ob__\", { value: this });\r\n    if (Array.isArray(data)) {\r\n      //如果是数组 就对原型对象上进行重写数组方法 以便进行劫持\r\n      data.__proto__ = newArrayProto;\r\n      // 也要对数组中的引用类型进行劫持\r\n      this.observeArray(data);\r\n    } else {\r\n      //对对象开始劫持 重新定义属性\r\n      this.walk(data);\r\n    }\r\n  }\r\n  //处理对象数据\r\n  walk(data) {\r\n    const keyList = Object.keys(data);\r\n    for (let k = 0; k < keyList.length; k++) {\r\n      //开始注入方法\r\n      defineReactive(data, keyList[k], data[keyList[k]]);\r\n    }\r\n  }\r\n  //处理数组中的引用类型\r\n  observeArray(arr) {\r\n    for (let i; i < arr.length; i++) {\r\n      if (isObject(arr[i])) this.walk(arr[i]);\r\n    }\r\n  }\r\n}\r\n","import { observe, isObject } from \"./observe/index\";\r\n\r\n//初始化状态\r\nexport function initState(vm) {\r\n  const opts = vm.$options;\r\n  if (opts.data) {\r\n    initData(vm);\r\n  }\r\n}\r\n\r\n//初始化data\r\nfunction initData(vm) {\r\n  let data = vm.$options.data;\r\n  data = typeof data === \"function\" ? data.call(vm) : data;\r\n  //在实例上挂在一下data\r\n  vm._data = data;\r\n  //对对象进行劫持\r\n  observe(data);\r\n  //进行循环遍历\r\n  //将vm._data用vm来进行代理 这样的话就可以通过vm直接获取属性了\r\n  for (let k in data) {\r\n    //对_data对象的所有属性进行重新代理\r\n    proxyHandler(vm, \"_data\", k);\r\n  }\r\n}\r\n\r\n//代理操作\r\nfunction proxyHandler(vm, target, k) {\r\n  Object.defineProperty(vm, k, {\r\n    get() {\r\n      return vm[target][k];\r\n    },\r\n    set(newValue) {\r\n      if (vm[target][k] !== newValue) {\r\n        vm[target][k] = newValue;\r\n      }\r\n    },\r\n  });\r\n}\r\n","import { compileToFunction } from \"./compiler\";\r\nimport { initState } from \"./initState\";\r\nimport { mountedComponent } from \"./liftCycle\";\r\n\r\n//用于在vue的原型对象上挂在init方法\r\nexport function initMixinVue(Vue) {\r\n  //进行初始化操作\r\n  function init(options) {\r\n    //vue规定 所有$开头的 都是自己定义的属性和方法\r\n    this.$options = options;\r\n    //初始化状态\r\n    initState(this);\r\n    //进行模板挂载操作\r\n    if (options.el) {\r\n      this.$mount(options.el); //实现数据的挂载\r\n    }\r\n  }\r\n  function mount(dom) {\r\n    let el = document.querySelector(dom); //拿到模板节点\r\n    const { $options } = this;\r\n    if (!$options.render) {\r\n      //如果模板中没写render\r\n      let template;\r\n      if (el) {\r\n        //如果获取到了el 这个dom元素\r\n        if (!$options.template) {\r\n          //如果模板中没写template\r\n          template = el.outerHTML; //得到的是html字符串,当前节点包括其子节点\r\n        } else {\r\n          //模板中写了template\r\n          template = $options.template;\r\n        }\r\n        if (template) {\r\n          //在这里需要进行编译\r\n          const render = compileToFunction(template);\r\n          $options.render = render;\r\n        }\r\n      }\r\n    } else {\r\n      //如果写了render\r\n    }\r\n    //挂载到组件实例上\r\n    mountedComponent(this, el);\r\n  }\r\n  Vue.prototype.$mount = mount;\r\n  Vue.prototype._init = init; //挂载init方法\r\n  //script 标签引入的vue.global.js 这个编译过程在浏览器运行的\r\n  // runtime(运行时) 是不包含模板编译的,整个比那一是打包的时候通过loader来转义  .vue  文件的\r\n}\r\n","import { initMixinVue } from \"./init\";\r\nfunction Vue(options) {\r\n  this._init(options);\r\n}\r\ninitMixinVue(Vue); //挂载了init\r\nexport default Vue;\r\n"],"names":["ncname","qnameCapture","concat","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHtml","html","advance","num","substring","START_TYPE","TEXT_TYPE","root","stack","startStack","createASTElement","tag","attrs","type","children","parent","startHandler","node","push","textHandler","text","replace","endHandler","pop","length","parseStartTag","start","match","matchObj","tagName","end","name","value","textEnd","indexOf","startTagText","endTagText","textHtml","genProps","str","_iterator","_createForOfIteratorHelper","_step","_loop","attr","attrObj","split","forEach","item","_item$split","_item$split2","_slicedToArray","key","JSON","stringify","s","n","done","err","e","f","slice","defaultTagRE","gen","childNode","codeGen","textSelf","test","lastIndex","matchStr","tokens","exec","currentIndex","index","trim","join","ast","map","child","compileToFunction","template","codeResult","render","Function","arrProto","Array","prototype","newArrayProto","Object","create","arrMethods","i","_len","arguments","args","_key","resultFun","apply","insertItem","ob","__ob__","isObject","walk","observe","data","_typeof","Observer","defineReactive","target","defineProperty","get","console","log","set","newVal","obj","_classCallCheck","isArray","__proto__","observeArray","_createClass","keyList","keys","k","arr","initState","vm","opts","$options","initData","call","_data","proxyHandler","newValue","initMixinVue","Vue","init","options","el","$mount","mount","dom","document","querySelector","outerHTML","_init"],"mappings":"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"}